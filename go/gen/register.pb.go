// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: protobuf/register.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Register_Invoke int32

const (
	Register_SINGLE     Register_Invoke = 0
	Register_ROUNDROBIN Register_Invoke = 1
	Register_RANDOM     Register_Invoke = 2
	Register_FIRST      Register_Invoke = 3
	Register_LAST       Register_Invoke = 4
)

// Enum value maps for Register_Invoke.
var (
	Register_Invoke_name = map[int32]string{
		0: "SINGLE",
		1: "ROUNDROBIN",
		2: "RANDOM",
		3: "FIRST",
		4: "LAST",
	}
	Register_Invoke_value = map[string]int32{
		"SINGLE":     0,
		"ROUNDROBIN": 1,
		"RANDOM":     2,
		"FIRST":      3,
		"LAST":       4,
	}
)

func (x Register_Invoke) Enum() *Register_Invoke {
	p := new(Register_Invoke)
	*p = x
	return p
}

func (x Register_Invoke) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Register_Invoke) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_register_proto_enumTypes[0].Descriptor()
}

func (Register_Invoke) Type() protoreflect.EnumType {
	return &file_protobuf_register_proto_enumTypes[0]
}

func (x Register_Invoke) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Register_Invoke.Descriptor instead.
func (Register_Invoke) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_register_proto_rawDescGZIP(), []int{0, 0}
}

type Register_Match int32

const (
	Register_EXACT    Register_Match = 0
	Register_PREFIX   Register_Match = 1
	Register_WILDCARD Register_Match = 2
)

// Enum value maps for Register_Match.
var (
	Register_Match_name = map[int32]string{
		0: "EXACT",
		1: "PREFIX",
		2: "WILDCARD",
	}
	Register_Match_value = map[string]int32{
		"EXACT":    0,
		"PREFIX":   1,
		"WILDCARD": 2,
	}
)

func (x Register_Match) Enum() *Register_Match {
	p := new(Register_Match)
	*p = x
	return p
}

func (x Register_Match) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Register_Match) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_register_proto_enumTypes[1].Descriptor()
}

func (Register_Match) Type() protoreflect.EnumType {
	return &file_protobuf_register_proto_enumTypes[1]
}

func (x Register_Match) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Register_Match.Descriptor instead.
func (Register_Match) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_register_proto_rawDescGZIP(), []int{0, 1}
}

type Register struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     uint64                 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Procedure     string                 `protobuf:"bytes,2,opt,name=procedure,proto3" json:"procedure,omitempty"`
	Invoke        Register_Invoke        `protobuf:"varint,3,opt,name=invoke,proto3,enum=Register_Invoke" json:"invoke,omitempty"`
	Match         Register_Match         `protobuf:"varint,4,opt,name=match,proto3,enum=Register_Match" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Register) Reset() {
	*x = Register{}
	mi := &file_protobuf_register_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_register_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_protobuf_register_proto_rawDescGZIP(), []int{0}
}

func (x *Register) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *Register) GetProcedure() string {
	if x != nil {
		return x.Procedure
	}
	return ""
}

func (x *Register) GetInvoke() Register_Invoke {
	if x != nil {
		return x.Invoke
	}
	return Register_SINGLE
}

func (x *Register) GetMatch() Register_Match {
	if x != nil {
		return x.Match
	}
	return Register_EXACT
}

var File_protobuf_register_proto protoreflect.FileDescriptor

const file_protobuf_register_proto_rawDesc = "" +
	"\n" +
	"\x17protobuf/register.proto\"\x8d\x02\n" +
	"\bRegister\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\x04R\trequestId\x12\x1c\n" +
	"\tprocedure\x18\x02 \x01(\tR\tprocedure\x12(\n" +
	"\x06invoke\x18\x03 \x01(\x0e2\x10.Register.InvokeR\x06invoke\x12%\n" +
	"\x05match\x18\x04 \x01(\x0e2\x0f.Register.MatchR\x05match\"E\n" +
	"\x06Invoke\x12\n" +
	"\n" +
	"\x06SINGLE\x10\x00\x12\x0e\n" +
	"\n" +
	"ROUNDROBIN\x10\x01\x12\n" +
	"\n" +
	"\x06RANDOM\x10\x02\x12\t\n" +
	"\x05FIRST\x10\x03\x12\b\n" +
	"\x04LAST\x10\x04\",\n" +
	"\x05Match\x12\t\n" +
	"\x05EXACT\x10\x00\x12\n" +
	"\n" +
	"\x06PREFIX\x10\x01\x12\f\n" +
	"\bWILDCARD\x10\x02b\x06proto3"

var (
	file_protobuf_register_proto_rawDescOnce sync.Once
	file_protobuf_register_proto_rawDescData []byte
)

func file_protobuf_register_proto_rawDescGZIP() []byte {
	file_protobuf_register_proto_rawDescOnce.Do(func() {
		file_protobuf_register_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_register_proto_rawDesc), len(file_protobuf_register_proto_rawDesc)))
	})
	return file_protobuf_register_proto_rawDescData
}

var file_protobuf_register_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protobuf_register_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protobuf_register_proto_goTypes = []any{
	(Register_Invoke)(0), // 0: Register.Invoke
	(Register_Match)(0),  // 1: Register.Match
	(*Register)(nil),     // 2: Register
}
var file_protobuf_register_proto_depIdxs = []int32{
	0, // 0: Register.invoke:type_name -> Register.Invoke
	1, // 1: Register.match:type_name -> Register.Match
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protobuf_register_proto_init() }
func file_protobuf_register_proto_init() {
	if File_protobuf_register_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_register_proto_rawDesc), len(file_protobuf_register_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_register_proto_goTypes,
		DependencyIndexes: file_protobuf_register_proto_depIdxs,
		EnumInfos:         file_protobuf_register_proto_enumTypes,
		MessageInfos:      file_protobuf_register_proto_msgTypes,
	}.Build()
	File_protobuf_register_proto = out.File
	file_protobuf_register_proto_goTypes = nil
	file_protobuf_register_proto_depIdxs = nil
}
